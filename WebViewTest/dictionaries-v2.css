@charset "UTF-8";
.dict-article * {
  color: #163C47;
}

/* Remove indents */
.dict-title,
.dict-header.dict-header-level-1 {
  display: inline-block;
  color: #163C47;
  margin-top: 10px; }

ul {
  padding-left: 15px; }

.dict-text-section-header,
h6:empty,
.dict-key,
.dict-pos-separator {
  display: none; }

.dict-sense-group > .dict-section-header {
  margin: 0;
  padding: 0; }

/* Make td fill everything it can to avoid unwanted word-wrap */
.dictionary-content {
  width: 100%; }

/* Add space between spans on edge */
span + span {
  padding-left: 2px; }

/* Span inside span */
.text span {
  padding-right: 2px; }

/* ul.dict-group is should not be displayed with new
   line but instead flow with text */
ul.dict-group {
  display: inline;
  list-style-type: none;
  padding: 0; }

/* -- Dict Hint -- */
/* Part of speech */
/* Capitalize first character */
.dict-pos {
  display: inline-block; }

/* Legacy */
.dict-pos-bar {
  display: none; }

.bar:not(:first-child), .comma:not(:first-child) {
  margin-left: -.3em; }

.dict-inline-list:last-child .separator, .bar:empty, .comma:empty {
  display: none; }

/* ========= Article ========================== */
.dict-articles {
  margin-top: 30px; }

/* ========= HEADWORD SECTION ================== */
/* Vertical bar separator */
/* Always show vertical bare before pos because we know its either
    placed after headword or last element in dict-meta. */
.dict-headword-section {
  font-weight: normal;
  /* Headword */
  /* Hide note in headword until we know how to display it Example 'le' in Vega ITNO */ }

.dict-headword-section .dict-headword .text {
  color: #163C47;
  text-align: center;
}

.dict-headword-section .dict-headword .dict-headword::before {
  content: ' | '; }

.dict-headword-section .dict-hint-note {
  display: none; }


/* ========= meta ============================== */
.dict-meta, .dict-hint {
  color: #95ACAC;
}

.dict-meta, .dict-section-meta {
  display: inline-block; }

.dict-hint-pron::before, .dict-hint-pron::after, .dict-hint-pronunciation::before, .dict-hint-pronunciation::after {
  content: "/"; }

.dict-hint-usage .inner::first-letter {
  text-transform: capitalize; }

.dict-hint-gender {
  font-style: italic; }

/* ========== ARTICLE CONTENT ================== */
.dict-article-section .dict-article {
  margin-bottom: 5px;
  padding: 5px;
  border: 1px solid #DCE2E3;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  -ms-border-radius: 5px;
  border-radius: 5px; }

/* Sense-group-section inside section elements */
.dict-sense-group-section .dict-sense-group-section-wrapper, .dict-compound-section .dict-sense-group-section-wrapper {
  margin-left: -20px; }

.dict-article > .dict-sense-group-section-wrapper:not(:last-child) {
  border-bottom: 1px solid #efefef;
  margin-bottom: 10px; }

/* Headers */
.dict-phrase-section-header, .dict-example-section-header {
  display: none; }

/*  Sense Group Section */
li.dict-section-meta,
.dict-sense-group {
  padding-top: 0;
  padding-bottom: 3px;
  margin-left: -20px; }

li.dict-section-meta .dict-hint-pronunciation::first-letter,
li.dict-section-meta .dict-hint-grammar::first-letter,
li.dict-section-meta .dict-pos::first-letter,
.dict-sense-group .dict-hint-pronunciation::first-letter,
.dict-sense-group .dict-hint-grammar::first-letter,
.dict-sense-group .dict-pos::first-letter {
  text-transform: capitalize; }

li.dict-section-meta:empty,
.dict-sense-group:empty {
  display: none; }

/* Nested sense group. See Collins English Theasuarus */
.dict-sense-group .dict-sense-group-section {
  border-top: 1px solid #DCE2E3;
  list-style-type: none; }

/* Special case definitions */
.dict-article-expanded {
  border: 1px solid red; }

.dict-first-definition-section .dict-definition-section-header {
  display: none; }

/*
This will fix extra line break in windows edge / chrome
Sections with only one child has hidden headers so
we need to apply inline to the li element.
When header is displayed this li should be displayed normal
See issue #119
*/
.dict-sense-group ul {
  display: inline-block;
  vertical-align: top;
  width: 90%; }

/* Inline UL og OL lister */
ul.dict-meta,
ul.dict-pos-section,
ul.dict-text-section,
ul.dict-translation-section,
ul.dict-reference-section,
ul.dict-definition-section,
ul.dict-antonym-section,
ul.dict-synonym-section {
  display: inline-block;
  list-style-type: none;
  padding: 0;
  margin-bottom: 0; }

/*
 * Override generic definition that will display
 * dict-meta as inline-block.
 * Show dict-meta inside list elements as inline.
 * This will make it flow with the text
 *
 * Ex: Following xml structure will show dict-meta as inline
 * <translation-section>
 * <translation>
 *      <meta> ... </text>
 *      <text> ... </text>
 * </translation>
 * </translations-section>
 */
.dict-headword-section ul.dict-meta,
.dict-section-list ul.dict-meta {
  display: inline; }

/* Inline LI elementer som hÃ¸rer til inline UL/OL lister */
.dict-meta li,
.dict-pos-section li,
.dict-group li,
.dict-text-section li,
.dict-translation-section li,
.dict-definition-section li,
.dict-reference-section li,
.dict-antonym-section li,
.dict-synonym-section li {
  display: inline;
  margin: 0;
  padding: 0; }

/* Since sections can start with meta we must append comma */
/* Add "after" li elements but not before the first one */
.dict-text-section > li.dict-textwrapper:not(:last-child) .text:last-child::after {
  content: ', '; }

/* Avoid double comma when dict-translation is not followed by translation */
/*
.dict-idiom-section > li.dict-idiom.dict-next-idiom,
.dict-translation-section > li.dict-translation.dict-next-translation,
.dict-definition-section > li.dict-definition.dict-next-definition,
.dict-reference-section > li.dict-reference.dict-next-reference,
.dict-synonym-section > li.dict-synonym.dict-next-synonym,
.dict-antonym-section > li.dict-antonym.dict-next-antonym {

  &:not(:last-child)::after {
    content : ",";
  }
}
*/
/* -------------------------------------------------- */
/* Group elements and add commas etc */
/* -------------------------------------------------- */
.dict-translation-section-header .dict-header {
  display: none; }

/* Add bold to translations in lists */
.dict-sense-group-section .dict-translation .text,
.dict-compound-section .dict-translation .text,
.dict-example-section .dict-translation .text,
.dict-phrase-section .dict-translation .text {
  font-weight: bold; }

/* Special handling for synonym because it has differenct lookn/feel. 
   Displayed inline and can have examples after each synonym */
.dict-synonym:not(:last-child)::after {
  content: ', '; }

.dict-definition:not(:last-child) .text::after,
.dict-antonym:not(:last-child) .text::after,
.dict-idiom:not(:last-child) .text::after,
.dict-reference:not(:last-child) .text::after,
.dict-translation:not(:last-child) .text::after {
  content: ', '; }

.dict-definition .text:not(:last-child)::after,
.dict-antonym .text:not(:last-child)::after,
.dict-idiom .text:not(:last-child)::after,
.dict-reference .text:not(:last-child)::after,
.dict-translation .text:not(:last-child)::after {
  content: ', '; }

/* Generic sense group */
.dict-sense-group-child:not(:last-child) {
  border-bottom: 1px solid #efefef; }

li.dict-section-separator {
  list-style-type: none; }

/* Defaults Display meta like  one | two | three
   Also fix issue where meta in section and meta in subelement would be
   displayed without separator (Issue #146)
*/
.dict-section-separator::after {
  content: ' | '; }

/* Sections with only one element. Hide bullets etc */
.dict-section-list {
  list-style-position: inside;
  margin: 0;
  padding: 0; }

.dict-section-list li {
  list-style-position: inside;
  margin: 0;
  padding: 0; }

/* ...and always hide translation section */
.dict-compound .dict-translation-section-header, .dict-compound .dict-header, .dict-example-group .dict-translation-section-header, .dict-example-group .dict-header, .dict-phrase-group .dict-translation-section-header, .dict-phrase-group .dict-header {
  display: none; }

.dict-compound .dict-translation, .dict-example-group .dict-translation, .dict-phrase-group .dict-translation {
  font-weight: bold; }

/* Legacy part of speec. */
.dict-group-part-of-speech {
  font-weight: bold;
  text-transform: capitalize; }

/* Group of inflation words should be italic */
.dict-hint-conjugation,
.dict-group-conjugation {
  font-style: italic; }

/* Show grammar */
.dict-headword-section .dict-hint-grammar {
  display: inline; }

.dict-hint-conjugation,
.dict-group .dict-hint-compositional-phrase {
  font-weight: normal;
  color: #000000; }

/* ============== .dict-section ================= */
/* Limit section */
.dict-section:not(:last-child) {
  border-bottom: 1px solid #efefef; }

/* Section */
.dict-section .dict-headword {
  font-weight: normal; }

.dict-section {
  /* Match first meta in section */ }

.dict-section > .dict-meta .dict-hint-pos {
  color: #000000;
  font-size: 1em;
  text-transform: uppercase; }

/* Derived words (cappelen english 2016) */
/* Normal fonts */
.dict-section-derived-words ol {
  list-style-type: none;
  margin: 0; }

.dict-section-derived-words .dict-headword::before {
  content: "> "; }

.dict-section-derived-words span.dict-headword {
  font-weight: normal;
  font-size: 1em; }

/* ============== References =================== */
.dict-reference-section {
  margin: 0;
  padding: 0; }

/* ============== ML Books =================== */
.monolingual .dict-textwrapper .text {
  font-style: italic; }

.monolingual .dict-example.with-translation-false > .text {
  font-weight: normal; }

/* ============== Note Section ================ */
ul.dict-note-section {
  background-color: #efefef;
  padding: 10px; }

ul.dict-note-section li.dict-note {
  margin-bottom: 2px;
  border-bottom: #000000; }

ul.dict-note-section .dict-group:not(:first-child)::before {
  content: ' - '; }

/* =============== Short Article ===================== */
/* Expand / Collaps article */
.short-article {
  /* Make sure html articles doesnt grow to large */ }

.short-article .dict-html-section .html {
  width: 500px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; }

/* ======== special cases =============== */
/* Used in fagbokforlaget */
.dict-textwrapper {
  font-weight: bold; }

.dict-textwrapper-italic {
  font-weight: normal; }
